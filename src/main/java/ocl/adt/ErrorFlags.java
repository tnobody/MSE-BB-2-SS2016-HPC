package ocl.adt;

import static org.jocl.CL.*;

/**
 * Created by tim on 25.05.2016.
 */
public enum ErrorFlags implements NativeFlags {
    SUCCESS(CL_SUCCESS),
    DEVICE_NOT_FOUND(CL_DEVICE_NOT_FOUND),
    DEVICE_NOT_AVAILABLE(CL_DEVICE_NOT_AVAILABLE),
    COMPILER_NOT_AVAILABLE(CL_COMPILER_NOT_AVAILABLE),
    MEM_OBJECT_ALLOCATION_FAILURE(CL_MEM_OBJECT_ALLOCATION_FAILURE),
    OUT_OF_RESOURCES(CL_OUT_OF_RESOURCES),
    OUT_OF_HOST_MEMORY(CL_OUT_OF_HOST_MEMORY),
    PROFILING_INFO_NOT_AVAILABLE(CL_PROFILING_INFO_NOT_AVAILABLE),
    MEM_COPY_OVERLAP(CL_MEM_COPY_OVERLAP),
    IMAGE_FORMAT_MISMATCH(CL_IMAGE_FORMAT_MISMATCH),
    IMAGE_FORMAT_NOT_SUPPORTED(CL_IMAGE_FORMAT_NOT_SUPPORTED),
    BUILD_PROGRAM_FAILURE(CL_BUILD_PROGRAM_FAILURE),
    MAP_FAILURE(CL_MAP_FAILURE),
    MISALIGNED_SUB_BUFFER_OFFSET(CL_MISALIGNED_SUB_BUFFER_OFFSET),
    EXEC_STATUS_ERROR_FOR_EVENTS_IN_WAIT_LIST(CL_EXEC_STATUS_ERROR_FOR_EVENTS_IN_WAIT_LIST),
    COMPILE_PROGRAM_FAILURE(CL_COMPILE_PROGRAM_FAILURE),
    LINKER_NOT_AVAILABLE(CL_LINKER_NOT_AVAILABLE),
    LINK_PROGRAM_FAILURE(CL_LINK_PROGRAM_FAILURE),
    DEVICE_PARTITION_FAILED(CL_DEVICE_PARTITION_FAILED),
    KERNEL_ARG_INFO_NOT_AVAILABLE(CL_KERNEL_ARG_INFO_NOT_AVAILABLE),
    INVALID_VALUE(CL_INVALID_VALUE),
    INVALID_DEVICE_TYPE(CL_INVALID_DEVICE_TYPE),
    INVALID_PLATFORM(CL_INVALID_PLATFORM),
    INVALID_DEVICE(CL_INVALID_DEVICE),
    INVALID_CONTEXT(CL_INVALID_CONTEXT),
    INVALID_QUEUE_PROPERTIES(CL_INVALID_QUEUE_PROPERTIES),
    INVALID_COMMAND_QUEUE(CL_INVALID_COMMAND_QUEUE),
    INVALID_HOST_PTR(CL_INVALID_HOST_PTR),
    INVALID_MEM_OBJECT(CL_INVALID_MEM_OBJECT),
    INVALID_IMAGE_FORMAT_DESCRIPTOR(CL_INVALID_IMAGE_FORMAT_DESCRIPTOR),
    INVALID_IMAGE_SIZE(CL_INVALID_IMAGE_SIZE),
    INVALID_SAMPLER(CL_INVALID_SAMPLER),
    INVALID_BINARY(CL_INVALID_BINARY),
    INVALID_BUILD_OPTIONS(CL_INVALID_BUILD_OPTIONS),
    INVALID_PROGRAM(CL_INVALID_PROGRAM),
    INVALID_PROGRAM_EXECUTABLE(CL_INVALID_PROGRAM_EXECUTABLE),
    INVALID_KERNEL_NAME(CL_INVALID_KERNEL_NAME),
    INVALID_KERNEL_DEFINITION(CL_INVALID_KERNEL_DEFINITION),
    INVALID_KERNEL(CL_INVALID_KERNEL),
    INVALID_ARG_INDEX(CL_INVALID_ARG_INDEX),
    INVALID_ARG_VALUE(CL_INVALID_ARG_VALUE),
    INVALID_ARG_SIZE(CL_INVALID_ARG_SIZE),
    INVALID_KERNEL_ARGS(CL_INVALID_KERNEL_ARGS),
    INVALID_WORK_DIMENSION(CL_INVALID_WORK_DIMENSION),
    INVALID_WORK_GROUP_SIZE(CL_INVALID_WORK_GROUP_SIZE),
    INVALID_WORK_ITEM_SIZE(CL_INVALID_WORK_ITEM_SIZE),
    INVALID_GLOBAL_OFFSET(CL_INVALID_GLOBAL_OFFSET),
    INVALID_EVENT_WAIT_LIST(CL_INVALID_EVENT_WAIT_LIST),
    INVALID_EVENT(CL_INVALID_EVENT),
    INVALID_OPERATION(CL_INVALID_OPERATION),
    INVALID_GL_OBJECT(CL_INVALID_GL_OBJECT),
    INVALID_BUFFER_SIZE(CL_INVALID_BUFFER_SIZE),
    INVALID_MIP_LEVEL(CL_INVALID_MIP_LEVEL),
    INVALID_GLOBAL_WORK_SIZE(CL_INVALID_GLOBAL_WORK_SIZE),
    INVALID_PROPERTY(CL_INVALID_PROPERTY),
    INVALID_IMAGE_DESCRIPTOR(CL_INVALID_IMAGE_DESCRIPTOR),
    INVALID_COMPILER_OPTIONS(CL_INVALID_COMPILER_OPTIONS),
    INVALID_LINKER_OPTIONS(CL_INVALID_LINKER_OPTIONS),
    INVALID_DEVICE_PARTITION_COUNT(CL_INVALID_DEVICE_PARTITION_COUNT),
    INVALID_PIPE_SIZE(CL_INVALID_PIPE_SIZE),
    INVALID_DEVICE_QUEUE(CL_INVALID_DEVICE_QUEUE),
    JOCL_INTERNAL_ERROR(CL_JOCL_INTERNAL_ERROR),
    INVALID_GL_SHAREGROUP_REFERENCE_KHR(CL_INVALID_GL_SHAREGROUP_REFERENCE_KHR),
    PLATFORM_NOT_FOUND_KHR(CL_PLATFORM_NOT_FOUND_KHR);

    long nativeFlag;

    ErrorFlags(long nativeFlag) {
        this.nativeFlag = nativeFlag;
    }

    @Override
    public long nativeValue() {
        return nativeFlag;
    }

    public static ErrorFlags fromNative(long nativeFlag) {
        switch ((int)nativeFlag) {
            case CL_SUCCESS: return ErrorFlags.SUCCESS;
            case CL_DEVICE_NOT_FOUND: return ErrorFlags.DEVICE_NOT_FOUND;
            case CL_DEVICE_NOT_AVAILABLE: return ErrorFlags.DEVICE_NOT_AVAILABLE;
            case CL_COMPILER_NOT_AVAILABLE: return ErrorFlags.COMPILER_NOT_AVAILABLE;
            case CL_MEM_OBJECT_ALLOCATION_FAILURE: return ErrorFlags.MEM_OBJECT_ALLOCATION_FAILURE;
            case CL_OUT_OF_RESOURCES: return ErrorFlags.OUT_OF_RESOURCES;
            case CL_OUT_OF_HOST_MEMORY: return ErrorFlags.OUT_OF_HOST_MEMORY;
            case CL_PROFILING_INFO_NOT_AVAILABLE: return ErrorFlags.PROFILING_INFO_NOT_AVAILABLE;
            case CL_MEM_COPY_OVERLAP: return ErrorFlags.MEM_COPY_OVERLAP;
            case CL_IMAGE_FORMAT_MISMATCH: return ErrorFlags.IMAGE_FORMAT_MISMATCH;
            case CL_IMAGE_FORMAT_NOT_SUPPORTED: return ErrorFlags.IMAGE_FORMAT_NOT_SUPPORTED;
            case CL_BUILD_PROGRAM_FAILURE: return ErrorFlags.BUILD_PROGRAM_FAILURE;
            case CL_MAP_FAILURE: return ErrorFlags.MAP_FAILURE;
            case CL_MISALIGNED_SUB_BUFFER_OFFSET: return ErrorFlags.MISALIGNED_SUB_BUFFER_OFFSET;
            case CL_EXEC_STATUS_ERROR_FOR_EVENTS_IN_WAIT_LIST: return ErrorFlags.EXEC_STATUS_ERROR_FOR_EVENTS_IN_WAIT_LIST;
            case CL_COMPILE_PROGRAM_FAILURE: return ErrorFlags.COMPILE_PROGRAM_FAILURE;
            case CL_LINKER_NOT_AVAILABLE: return ErrorFlags.LINKER_NOT_AVAILABLE;
            case CL_LINK_PROGRAM_FAILURE: return ErrorFlags.LINK_PROGRAM_FAILURE;
            case CL_DEVICE_PARTITION_FAILED: return ErrorFlags.DEVICE_PARTITION_FAILED;
            case CL_KERNEL_ARG_INFO_NOT_AVAILABLE: return ErrorFlags.KERNEL_ARG_INFO_NOT_AVAILABLE;
            case CL_INVALID_VALUE: return ErrorFlags.INVALID_VALUE;
            case CL_INVALID_DEVICE_TYPE: return ErrorFlags.INVALID_DEVICE_TYPE;
            case CL_INVALID_PLATFORM: return ErrorFlags.INVALID_PLATFORM;
            case CL_INVALID_DEVICE: return ErrorFlags.INVALID_DEVICE;
            case CL_INVALID_CONTEXT: return ErrorFlags.INVALID_CONTEXT;
            case CL_INVALID_QUEUE_PROPERTIES: return ErrorFlags.INVALID_QUEUE_PROPERTIES;
            case CL_INVALID_COMMAND_QUEUE: return ErrorFlags.INVALID_COMMAND_QUEUE;
            case CL_INVALID_HOST_PTR: return ErrorFlags.INVALID_HOST_PTR;
            case CL_INVALID_MEM_OBJECT: return ErrorFlags.INVALID_MEM_OBJECT;
            case CL_INVALID_IMAGE_FORMAT_DESCRIPTOR: return ErrorFlags.INVALID_IMAGE_FORMAT_DESCRIPTOR;
            case CL_INVALID_IMAGE_SIZE: return ErrorFlags.INVALID_IMAGE_SIZE;
            case CL_INVALID_SAMPLER: return ErrorFlags.INVALID_SAMPLER;
            case CL_INVALID_BINARY: return ErrorFlags.INVALID_BINARY;
            case CL_INVALID_BUILD_OPTIONS: return ErrorFlags.INVALID_BUILD_OPTIONS;
            case CL_INVALID_PROGRAM: return ErrorFlags.INVALID_PROGRAM;
            case CL_INVALID_PROGRAM_EXECUTABLE: return ErrorFlags.INVALID_PROGRAM_EXECUTABLE;
            case CL_INVALID_KERNEL_NAME: return ErrorFlags.INVALID_KERNEL_NAME;
            case CL_INVALID_KERNEL_DEFINITION: return ErrorFlags.INVALID_KERNEL_DEFINITION;
            case CL_INVALID_KERNEL: return ErrorFlags.INVALID_KERNEL;
            case CL_INVALID_ARG_INDEX: return ErrorFlags.INVALID_ARG_INDEX;
            case CL_INVALID_ARG_VALUE: return ErrorFlags.INVALID_ARG_VALUE;
            case CL_INVALID_ARG_SIZE: return ErrorFlags.INVALID_ARG_SIZE;
            case CL_INVALID_KERNEL_ARGS: return ErrorFlags.INVALID_KERNEL_ARGS;
            case CL_INVALID_WORK_DIMENSION: return ErrorFlags.INVALID_WORK_DIMENSION;
            case CL_INVALID_WORK_GROUP_SIZE: return ErrorFlags.INVALID_WORK_GROUP_SIZE;
            case CL_INVALID_WORK_ITEM_SIZE: return ErrorFlags.INVALID_WORK_ITEM_SIZE;
            case CL_INVALID_GLOBAL_OFFSET: return ErrorFlags.INVALID_GLOBAL_OFFSET;
            case CL_INVALID_EVENT_WAIT_LIST: return ErrorFlags.INVALID_EVENT_WAIT_LIST;
            case CL_INVALID_EVENT: return ErrorFlags.INVALID_EVENT;
            case CL_INVALID_OPERATION: return ErrorFlags.INVALID_OPERATION;
            case CL_INVALID_GL_OBJECT: return ErrorFlags.INVALID_GL_OBJECT;
            case CL_INVALID_BUFFER_SIZE: return ErrorFlags.INVALID_BUFFER_SIZE;
            case CL_INVALID_MIP_LEVEL: return ErrorFlags.INVALID_MIP_LEVEL;
            case CL_INVALID_GLOBAL_WORK_SIZE: return ErrorFlags.INVALID_GLOBAL_WORK_SIZE;
            case CL_INVALID_PROPERTY: return ErrorFlags.INVALID_PROPERTY;
            case CL_INVALID_IMAGE_DESCRIPTOR: return ErrorFlags.INVALID_IMAGE_DESCRIPTOR;
            case CL_INVALID_COMPILER_OPTIONS: return ErrorFlags.INVALID_COMPILER_OPTIONS;
            case CL_INVALID_LINKER_OPTIONS: return ErrorFlags.INVALID_LINKER_OPTIONS;
            case CL_INVALID_DEVICE_PARTITION_COUNT: return ErrorFlags.INVALID_DEVICE_PARTITION_COUNT;
            case CL_INVALID_PIPE_SIZE: return ErrorFlags.INVALID_PIPE_SIZE;
            case CL_INVALID_DEVICE_QUEUE: return ErrorFlags.INVALID_DEVICE_QUEUE;
            case CL_JOCL_INTERNAL_ERROR: return ErrorFlags.JOCL_INTERNAL_ERROR;
            case CL_INVALID_GL_SHAREGROUP_REFERENCE_KHR: return ErrorFlags.INVALID_GL_SHAREGROUP_REFERENCE_KHR;
            case CL_PLATFORM_NOT_FOUND_KHR: return ErrorFlags.PLATFORM_NOT_FOUND_KHR;
            default:
                return null;
        }
    }

}
